{"componentChunkName":"component---src-components-post-tsx","path":"/posts/2011/2011-02-13_ProjectiveTexturing/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"Projective Texturing\",\n  \"date\": \"2011-02-13T00:00:00.000Z\",\n  \"summary\": \"How to map the vertices of a scene into shadow map texture space\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `While working on my shadow mapping system, I finally figured out how to correctly map vertex positions from my scene into shadow map texture space. It’s not super complicated, but I had to scrounge around a lot on the web to come up with a satisfying list of operations. Hopefully the following code can help others get there faster.`), mdx(\"p\", null, `In my system, as with most, we render the scene from the light’s POV and save the depth data. We then render the scene from the camera’s POV and use the generated shadow map to calculate whether pixels seen by the camera are shadowed or not. This second stage requires taking vertex positions from an object and (in the vertex and pixel shaders) converting them into shadow-map texture coordinates so that we can sample from the shadow map correctly. To do this, we can generate a matrix to get most of the way there and then use tex2Dproj to do the texture lookup.`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cpp\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cpp\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `/// <summary>`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `/// Generates a matrix the converts from projection space to [0,1] texture space`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `/// for projective texturing, flipping the Y axis in the process.`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `/// Optionally includes the half-texel offset necessary in DirectX9 to properly align to texels.`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `/// </summary>`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `static`), ` Matrix `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `CreateTextureMatrix`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `int`), ` texWidth`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `int`), ` texHeight`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `bool`), ` includeHalfTexelOffset `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, `true`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `bool`), ` flipY `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, `true`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Calculate translation for conversion + DX9 half-pixel offset`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float`), ` xOffset `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `+`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `includeHalfTexelOffset `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `?`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `/`), ` texWidth `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `:`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float`), ` yOffset `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `+`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `includeHalfTexelOffset `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `?`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `/`), ` texHeight `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `:`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float`), ` yScale `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` flipY `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `?`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `-`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `:`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//We want to remap [-1,1] clip space to [0,1] texture space`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Multiplying a projected vector by the following matrix should give us`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//x' = 0.5x + xOffset * w`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//y' = -0.5y + yOffset * w`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//z' = 0`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//w' = w`), `\n    Matrix matTex `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `new`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `Matrix`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.5f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `\n                               `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `    yScale`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `  `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Flip y axis`), `\n                               `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `\n                               xOffset`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` yOffset`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `0.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `1.0f`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `return`), ` matTex`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cpp\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cpp\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//This sets the matrix for converting from world space to shadow-map texture coordinates. I`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//use the value in the vertex shader for rendering the scene.`), `\nshadowEffect`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `Parameters`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `[`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"LightViewProjTex0\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `]`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `SetValue`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `\n                        light`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `View `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `*`), ` light`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `Projection `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `*`), `\n                        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `CreateTextureMatrix`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `shadowMap`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `Width`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` shadowMap`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `Height`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, `true`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token boolean\"\n  }, `true`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`)))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"hlsl\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-hlsl\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hlsl\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//The following is in the vertex shader for rendering the scene from the camera's POV`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//LightView0 is light.View`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//LightViewProj0 is light.View * light.Projection`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), ` Po `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `IN`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `Position`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `xyz`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `1`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Object space position`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), ` Pw `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `mul`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `Po`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` World`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `xyz`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `1`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//World space position`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Calculate shadow map texture space position of vertex. The xy values will contain u*w and v*w.`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//We have to wait to perform this divide because otherwise the texture interpolator will muck it up.`), `\nOUT`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0 `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `mul`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `Pw`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` LightViewProjTex0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `if`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `UseLinearDepth`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), ` LightViewPos `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `mul`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `Pw`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` LightView0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Light-space position of vertex`), `\n    OUT`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `z `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `abs`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `LightViewPos`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `z`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `-`), ` DepthRange`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `x`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `*`), ` DepthRange`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `y`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Store depth in the z coord`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `else`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), ` LightViewProjPos `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `mul`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `Pw`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` LightViewProj0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Projected light-space position of vertex`), `\n    OUT`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `z `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` LightViewProjPos`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `z `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `/`), ` LightViewProjPos`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `w`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Store depth in the z coord`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"hlsl\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-hlsl\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hlsl\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//In the pixel shader, we need to perform the perspective divide on the uv coords. We can either do this directly and then use tex2D...`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float2`), ` shadowMapUV `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` IN`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `xy `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `/`), ` IN`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `w`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float`), ` shadowMapValue `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `tex2D`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `shadowMapSampler`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` shadowMapUV`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Or we can use the tex2Dproj function to do the math for us`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float4`), ` shadowMapUV `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` IN`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `LightMap0`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `float`), ` shadowMapValue `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `tex2Dproj`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `shadowMapSampler`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` shadowMapUV`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `//Performs xy / w automatically`)))), mdx(\"p\", null, `Most of what I have above is gleaned from `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://diaryofagraphicsprogrammer.blogspot.com/2008/09/calculating-screen-space-texture.html\"\n  }, `Diary of a Graphics Programmer`), ` and `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gamedev.net/topic/301151-projective-texturing-and-tex2dproj/\"\n  }, `gamedev.net`), `, though the former is a little confusing, as the half-pixel offset should be `, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"math math-inline\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mfrac\", {\n    parentName: \"mrow\"\n  }, mdx(\"mn\", {\n    parentName: \"mfrac\"\n  }, `1`), mdx(\"mrow\", {\n    parentName: \"mfrac\"\n  }, mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, `2`), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, `×`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `T`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `a`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `r`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `g`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `e`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `t`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `W`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `i`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `d`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `t`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `h`)))), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, `\\\\frac{1}{2 \\\\times TargetWidth}`)))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1.326216em\",\n      \"verticalAlign\": \"-0.481108em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen nulldelimiter\"\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mfrac\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-t vlist-t2\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-r\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.845108em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-2.6550000000000002em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, `2`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mbin mtight\"\n  }, `×`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }, `T`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `a`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.02778em\"\n    }\n  }, `r`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.03588em\"\n    }\n  }, `g`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `e`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `t`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }, `W`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `i`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `d`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `t`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `h`)))), mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-3.23em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"frac-line\",\n    \"style\": {\n      \"borderBottomWidth\": \"0.04em\"\n    }\n  })), mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-3.394em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, `1`))))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-s\"\n  }, `​`)), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-r\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.481108em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose nulldelimiter\"\n  })))))), `, not `, mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"math math-inline\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mfrac\", {\n    parentName: \"mrow\"\n  }, mdx(\"mrow\", {\n    parentName: \"mfrac\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `T`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `a`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `r`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `g`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `e`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `t`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `W`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `i`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `d`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `t`), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, `h`)), mdx(\"mn\", {\n    parentName: \"mfrac\"\n  }, `2`))), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, `\\\\frac{TargetWidth}{2}`)))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1.277216em\",\n      \"verticalAlign\": \"-0.345em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mopen nulldelimiter\"\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mfrac\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-t vlist-t2\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-r\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.9322159999999999em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-2.6550000000000002em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, `2`)))), mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-3.23em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"frac-line\",\n    \"style\": {\n      \"borderBottomWidth\": \"0.04em\"\n    }\n  })), mdx(\"span\", {\n    parentName: \"span\",\n    \"style\": {\n      \"top\": \"-3.446108em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"3em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mtight\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }, `T`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `a`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.02778em\"\n    }\n  }, `r`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.03588em\"\n    }\n  }, `g`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `e`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `t`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\",\n    \"style\": {\n      \"marginRight\": \"0.13889em\"\n    }\n  }, `W`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `i`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `d`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `t`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal mtight\"\n  }, `h`))))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-s\"\n  }, `​`)), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist-r\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.345em\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }))))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mclose nulldelimiter\"\n  })))))), `.`));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"__typename":"ArticleFrontmatter","date":"2011-02-13T00:00:00.000Z","formattedDate":"February 13, 2011","title":"Projective Texturing","subtitle":null,"excerpt":null,"summary":"How to map the vertices of a scene into shadow map texture space"}}},"pageContext":{"id":"352b14f8-9951-5468-8acb-cf8fd5c2c822"}},"staticQueryHashes":[]}